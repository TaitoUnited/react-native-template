name: 'Common workflow'
on:
  workflow_call:
    inputs:
      platform:
        type: string
        required: true
      email:
        type: string
        required: true

      environment:
        type: string
        required: true
jobs:
  build:
    name: Build
    outputs:
      BUILD_URL: ${{ steps.build-app.outputs.BUILD_URL }}
    runs-on: ubuntu-latest
    steps:
      - name: üîê Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: ‚¨áÔ∏è Setup repo
        uses: actions/checkout@v3

      - name: ‚éî Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: ./package.json

      - name: üèó Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üöÄ Build app
        id: build-app
        run: |
          eas build --platform ${{ inputs.platform }} --profile ${{ inputs.environment }} --non-interactive | tee temp.txt
          echo "BUILD_URL=$(echo "$(cat temp.txt)" | grep -o 'Build details: [^ ]*' | awk '{print $3}')" >> $GITHUB_OUTPUT

  notify-slack:
    name: 'Slack notification'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: üîê Check for SLACK_WEBHOOK
        run: |
          if [ -z "${{ secrets.SLACK_WEBHOOK }}" ]; then
            echo "You must provide a SLACK_WEBHOOK secret to be able to send slack notifications. Learn more in the EAS README"
            exit 1
          fi

      - name: ‚úÖ Notify slack success
        if: needs.build.result == 'success' && needs.build.outputs.BUILD_URL != ''
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: builds # <-- Change this to the relevant slack channel
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: ${{ github.event.organization.avatar_url }}
          SLACK_TITLE: 'Build successfull for ${{ inputs.platform }} :white_check_mark:'
          SLACK_MESSAGE: 'See <${{ needs.build.outputs.BUILD_URL }}|EAS build> :rocket:'
          SLACK_USERNAME: ${{ github.event.repository.name }} - ${{ github.workflow }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: ‚ùå Notify slack fail
        if: needs.build.result != 'success' || needs.build.outputs.BUILD_URL == ''
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: builds # <-- Change this to the relevant slack channel
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: ${{ github.event.organization.avatar_url }}
          SLACK_TITLE: 'Build failed for ${{ inputs.platform }} :x:'
          SLACK_MESSAGE: if [ -z "${{ needs.build.outputs.BUILD_URL }}" ]; then echo 'See the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Github Actions logs> for more info :sad_pepe:'; else echo 'See the <${{ needs.build.outputs.BUILD_URL }}|EAS build> for more info :sad_pepe:'; fi
          SLACK_USERNAME: ${{ github.event.repository.name }} - ${{ github.workflow }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  notify-clients:
    name: 'Send email to client'
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.result == 'success' && needs.build.outputs.BUILD_URL != '' && inputs.email == 'true'
    strategy:
      matrix:
        to-emails:
          # Add the client emails here
          - julien.texier@taitounited.fi
          - teemu.taskula@taitounited.fi
    steps:
      - name: üîê Check for secrets.SENDGRID_GITHUB_ACTION_API_KEY
        run: |
          if [ -z "${{ secrets.SENDGRID_GITHUB_ACTION_API_KEY }}" ]; then
            echo "You must provide a SENDGRID_GITHUB_ACTION_API_KEY secret linked to be able to send emails. Learn more in the EAS README"
            exit 1
          fi

      - name: üìß Notify client
        uses: licenseware/send-email-notification@v1
        with:
          api-key: ${{ secrets.SENDGRID_GITHUB_ACTION_API_KEY }}
          subject: New Release for ${{ inputs.platform }} (${{ inputs.environment }} environment)
          from-email: taito.dev@gmail.com
          to-email: ${{ join(matrix.to-emails, ', ') }}
          markdown-body: |
            # New Release for ${{ inputs.platform }} üöÄ
            Click [here](${{ needs.build.outputs.BUILD_URL }}) to install it on your device. üì≤
